<?php

namespace Proxies\__CG__\GestionFaenaBundle\Entity\opciones;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CalculoFaena extends \GestionFaenaBundle\Entity\opciones\CalculoFaena implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'id', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'calculo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'titulo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'nombreArticulo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'procesos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'conceptos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'tipos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'atributos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'articulos'];
        }

        return ['__isInitialized__', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'id', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'calculo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'titulo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'nombreArticulo', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'procesos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'conceptos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'tipos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'atributos', '' . "\0" . 'GestionFaenaBundle\\Entity\\opciones\\CalculoFaena' . "\0" . 'articulos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CalculoFaena $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCalculo($calculo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCalculo', [$calculo]);

        return parent::setCalculo($calculo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCalculo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCalculo', []);

        return parent::getCalculo();
    }

    /**
     * {@inheritDoc}
     */
    public function addProceso(\GestionFaenaBundle\Entity\ProcesoFaena $proceso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProceso', [$proceso]);

        return parent::addProceso($proceso);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProceso(\GestionFaenaBundle\Entity\ProcesoFaena $proceso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProceso', [$proceso]);

        return parent::removeProceso($proceso);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcesos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcesos', []);

        return parent::getProcesos();
    }

    /**
     * {@inheritDoc}
     */
    public function addConcepto(\GestionFaenaBundle\Entity\faena\ConceptoMovimiento $concepto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConcepto', [$concepto]);

        return parent::addConcepto($concepto);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConcepto(\GestionFaenaBundle\Entity\faena\ConceptoMovimiento $concepto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConcepto', [$concepto]);

        return parent::removeConcepto($concepto);
    }

    /**
     * {@inheritDoc}
     */
    public function getConceptos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConceptos', []);

        return parent::getConceptos();
    }

    /**
     * {@inheritDoc}
     */
    public function addTipo(\GestionFaenaBundle\Entity\faena\TipoMovimientoConcepto $tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTipo', [$tipo]);

        return parent::addTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTipo(\GestionFaenaBundle\Entity\faena\TipoMovimientoConcepto $tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTipo', [$tipo]);

        return parent::removeTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipos', []);

        return parent::getTipos();
    }

    /**
     * {@inheritDoc}
     */
    public function addAtributo(\GestionFaenaBundle\Entity\gestionBD\AtributoAbstracto $atributo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAtributo', [$atributo]);

        return parent::addAtributo($atributo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAtributo(\GestionFaenaBundle\Entity\gestionBD\AtributoAbstracto $atributo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAtributo', [$atributo]);

        return parent::removeAtributo($atributo);
    }

    /**
     * {@inheritDoc}
     */
    public function getAtributos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAtributos', []);

        return parent::getAtributos();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitulo($titulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitulo', [$titulo]);

        return parent::setTitulo($titulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitulo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitulo', []);

        return parent::getTitulo();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombreArticulo($nombreArticulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombreArticulo', [$nombreArticulo]);

        return parent::setNombreArticulo($nombreArticulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreArticulo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreArticulo', []);

        return parent::getNombreArticulo();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticulo(\GestionFaenaBundle\Entity\gestionBD\Articulo $articulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticulo', [$articulo]);

        return parent::addArticulo($articulo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticulo(\GestionFaenaBundle\Entity\gestionBD\Articulo $articulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticulo', [$articulo]);

        return parent::removeArticulo($articulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticulos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticulos', []);

        return parent::getArticulos();
    }

}
