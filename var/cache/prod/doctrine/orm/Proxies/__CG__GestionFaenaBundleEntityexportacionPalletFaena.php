<?php

namespace Proxies\__CG__\GestionFaenaBundle\Entity\exportacion;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PalletFaena extends \GestionFaenaBundle\Entity\exportacion\PalletFaena implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'id', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'codigo', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'fechaCreacion', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'fechaFinalizacion', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'eliminado', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'tipoPallet', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'valores', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'completo', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'acumulado', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'articulos'];
        }

        return ['__isInitialized__', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'id', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'codigo', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'fechaCreacion', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'fechaFinalizacion', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'eliminado', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'tipoPallet', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'valores', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'completo', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'acumulado', '' . "\0" . 'GestionFaenaBundle\\Entity\\exportacion\\PalletFaena' . "\0" . 'articulos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PalletFaena $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodigo($codigo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodigo', [$codigo]);

        return parent::setCodigo($codigo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodigo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodigo', []);

        return parent::getCodigo();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaCreacion($fechaCreacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaCreacion', [$fechaCreacion]);

        return parent::setFechaCreacion($fechaCreacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaCreacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaCreacion', []);

        return parent::getFechaCreacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaFinalizacion($fechaFinalizacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaFinalizacion', [$fechaFinalizacion]);

        return parent::setFechaFinalizacion($fechaFinalizacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaFinalizacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaFinalizacion', []);

        return parent::getFechaFinalizacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setEliminado($eliminado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEliminado', [$eliminado]);

        return parent::setEliminado($eliminado);
    }

    /**
     * {@inheritDoc}
     */
    public function getEliminado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEliminado', []);

        return parent::getEliminado();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipoPallet(\GestionFaenaBundle\Entity\exportacion\TipoPallet $tipoPallet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipoPallet', [$tipoPallet]);

        return parent::setTipoPallet($tipoPallet);
    }

    /**
     * {@inheritDoc}
     */
    public function getTipoPallet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipoPallet', []);

        return parent::getTipoPallet();
    }

    /**
     * {@inheritDoc}
     */
    public function addValore(\GestionFaenaBundle\Entity\faena\ValorAtributo $valore)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValore', [$valore]);

        return parent::addValore($valore);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValore(\GestionFaenaBundle\Entity\faena\ValorAtributo $valore)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValore', [$valore]);

        return parent::removeValore($valore);
    }

    /**
     * {@inheritDoc}
     */
    public function getValores()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValores', []);

        return parent::getValores();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompleto($completo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompleto', [$completo]);

        return parent::setCompleto($completo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompleto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompleto', []);

        return parent::getCompleto();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcumulado($acumulado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcumulado', [$acumulado]);

        return parent::setAcumulado($acumulado);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcumulado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcumulado', []);

        return parent::getAcumulado();
    }

    /**
     * {@inheritDoc}
     */
    public function actualizarPallet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'actualizarPallet', []);

        return parent::actualizarPallet();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticulo(\GestionFaenaBundle\Entity\gestionBD\Articulo $articulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticulo', [$articulo]);

        return parent::addArticulo($articulo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticulo(\GestionFaenaBundle\Entity\gestionBD\Articulo $articulo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticulo', [$articulo]);

        return parent::removeArticulo($articulo);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticulos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticulos', []);

        return parent::getArticulos();
    }

}
