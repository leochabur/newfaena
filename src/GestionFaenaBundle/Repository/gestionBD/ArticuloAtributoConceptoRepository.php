<?php

namespace GestionFaenaBundle\Repository\gestionBD;

/**
 * ArticuloAtributoConceptoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticuloAtributoConceptoRepository extends \Doctrine\ORM\EntityRepository
{
	public function findArticuloAtributoConcepto(\GestionFaenaBundle\Entity\gestionBD\Articulo $articulo,
												 \GestionFaenaBundle\Entity\faena\ConceptoMovimiento $concepto,
												 $instanceOfTipoMovimiento,
												 \GestionFaenaBundle\Entity\ProcesoFaena $proceso) 
	{ 
        return $this->getEntityManager()
            		->createQuery('SELECT a
            					   FROM GestionFaenaBundle:gestionBD\ArticuloAtributoConcepto a 
            					   JOIN a.concepto concepto
                                   JOIN concepto.concepto conceptoMovimiento
            					   JOIN a.articulo articulo
            					   JOIN concepto.tipoMovimiento tipoMovimiento
            					   JOIN concepto.procesoFaena proceso
            					   WHERE a.activo = :activo AND conceptoMovimiento = :concepto AND articulo = :articulo AND proceso = :proceso AND tipoMovimiento.instancia = :instance')
            		->setParameter('proceso', $proceso)
            		->setParameter('articulo', $articulo)
            		->setParameter('concepto', $concepto)
                    ->setParameter('activo', true)
            		->setParameter('instance', $instanceOfTipoMovimiento)
            		->getOneOrNullResult();
	} 

    public function getAllArticulos() 
    { 
        return $this->getEntityManager()
                    ->createQuery('SELECT a
                                   FROM GestionFaenaBundle:gestionBD\ArticuloAtributoConcepto a 
                                   JOIN a.concepto concepto
                                   JOIN concepto.concepto conceptoMovimiento
                                   JOIN concepto.procesoFaena proceso
                                   WHERE a.activo = :activo
                                   ORDER BY proceso.nombre, conceptoMovimiento.concepto')
                    ->setParameter('activo', true)
                    ->getResult();
    } 
}
