<?php

namespace GestionFaenaBundle\Repository\faena;

/**
 * ConceptoMovimientoProcesoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConceptoMovimientoProcesoRepository extends \Doctrine\ORM\EntityRepository
{

    public function getConceptoMovimientoProceso(\GestionFaenaBundle\Entity\ProcesoFaena $proceso, 
                                                 \GestionFaenaBundle\Entity\faena\ConceptoMovimiento $concepto,
                                                 $instance)
    {
        return $this->getEntityManager()
            		->createQuery('SELECT c
            					   FROM GestionFaenaBundle:faena\ConceptoMovimientoProceso c
                         JOIN c.tipoMovimiento tm
            					   WHERE c.activo = :activo AND c.procesoFaena = :proceso AND c.concepto = :concepto AND tm.instancia = :instance')
            		->setParameter('proceso', $proceso)
            		->setParameter('concepto', $concepto)
                ->setParameter('instance', $instance)
                ->setParameter('activo', true)
            		->getOneOrNullResult();
    }

    public function findAllConceptosByTipo(\GestionFaenaBundle\Entity\ProcesoFaena $proceso, 
                                           \GestionFaenaBundle\Entity\faena\TipoMovimientoConcepto $tipoMovimiento,
                                            $automatico = false)
    {
        return $this->getEntityManager()
                    ->createQuery('SELECT c.id, ca.concepto as show
                                   FROM GestionFaenaBundle:faena\ConceptoMovimientoProceso c
                                   JOIN c.concepto ca
                                   JOIN GestionFaenaBundle:gestionBD\ArticuloAtributoConcepto aac WITH aac.concepto = c
                                   WHERE aac.activo = :activo AND c.procesoFaena = :proceso AND c.tipoMovimiento = :tipo AND c.automatico = :automatico
                                   GROUP BY c')
                    ->setParameter('proceso', $proceso)
                    ->setParameter('tipo', $tipoMovimiento)
                    ->setParameter('automatico', $automatico)
                    ->setParameter('activo', true)
                    ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);
    }

    //->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

}
