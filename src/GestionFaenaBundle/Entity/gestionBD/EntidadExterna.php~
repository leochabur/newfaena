<?php

namespace GestionFaenaBundle\Entity\gestionBD;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
/**
 * EntidadExterna
 *
 * @ORM\Table(name="sp_gst_ent_ext")
 * @ORM\Entity(repositoryClass="GestionFaenaBundle\Repository\gestionBD\EntidadExternaRepository")
 * @ORM\InheritanceType("JOINED")
 * @ORM\DiscriminatorColumn(name="type", type="integer")
 * @ORM\DiscriminatorMap({1:"EntidadExterna",2: "Granja", 3: "Transportista", 4: "Cargador", 5: "Sucursal", 6: "Consignatario", 7: "Remito", 8: "Anexo", 9: "Reparto", 10: "Exportacion", 11:"EntidadComercial"})
 * @ORM\HasLifecycleCallbacks()
 */

abstract class EntidadExterna
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="valor", type="string", length=255)
     * @Assert\NotNull(message="El campo no puede permanecer en blanco!")
     */
    private $valor;

    /**
    * @ORM\ManyToOne(targetEntity="RubroEntidad", inversedBy="entidades") 
    * @ORM\JoinColumn(name="id_rub_ent", referencedColumnName="id", nullable=true)
    */   
    private $rubro;

    /**
     * @var boolean
     *
     * @ORM\Column(name="activa", type="boolean", options={"default":true})
     */
    private $activa = true;

    /**
     * @var cliente
     *
     * @ORM\Column(name="cliente", type="boolean", options={"default":true})
     */
    private $cliente;

    /**
     * @ORM\OneToMany(targetEntity="EntidadExterna", mappedBy="original")
     */
    private $asociados;

    /**
     * @ORM\ManyToOne(targetEntity="EntidadExterna", inversedBy="asociados")
     * @ORM\JoinColumn(name="id_ent", referencedColumnName="id")
     */
    private $original;

    /**
     * @var boolean
     *
     * @ORM\Column(name="asociado", type="boolean", options={"default":false})
     */
    private $asociado = false; //indica si una entidad es subentidad de otra //para el caso que el cliente tenga subclientes

    /**
     * @ORM\PrePersist
     */
    public function setIsCliente()
    {
        $this->setCliente($this->getIsCliente());
    }

    protected abstract function getIsCliente();

    public function getRenspa()
    {
        return "";
    }

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set valor
     *
     * @param string $valor
     *
     * @return EntidadExterna
     */
    public function setValor($valor)
    {
        $this->valor = $valor;

        return $this;
    }

    /**
     * Get valor
     *
     * @return string
     */
    public function getValor()
    {
        return $this->valor;
    }

    public function __toString()
    {
        return strtoupper($this->valor);
    }

    /**
     * Set activa
     *
     * @param boolean $activa
     *
     * @return EntidadExterna
     */
    public function setActiva($activa)
    {
        $this->activa = $activa;

        return $this;
    }

    /**
     * Get activa
     *
     * @return boolean
     */
    public function getActiva()
    {
        return $this->activa;
    }

    /**
     * Set rubro
     *
     * @param \GestionFaenaBundle\Entity\gestionBD\RubroEntidad $rubro
     *
     * @return EntidadExterna
     */
    public function setRubro(\GestionFaenaBundle\Entity\gestionBD\RubroEntidad $rubro = null)
    {
        $this->rubro = $rubro;

        return $this;
    }

    /**
     * Get rubro
     *
     * @return \GestionFaenaBundle\Entity\gestionBD\RubroEntidad
     */
    public function getRubro()
    {
        return $this->rubro;
    }

    /**
     * Set cliente
     *
     * @param boolean $cliente
     *
     * @return EntidadExterna
     */
    public function setCliente($cliente)
    {
        $this->cliente = $cliente;

        return $this;
    }

    /**
     * Get cliente
     *
     * @return boolean
     */
    public function getCliente()
    {
        return $this->cliente;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->asociados = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add asociado
     *
     * @param \GestionFaenaBundle\Entity\gestionBD\EntidadExterna $asociado
     *
     * @return EntidadExterna
     */
    public function addAsociado(\GestionFaenaBundle\Entity\gestionBD\EntidadExterna $asociado)
    {
        $this->asociados[] = $asociado;

        return $this;
    }

    /**
     * Remove asociado
     *
     * @param \GestionFaenaBundle\Entity\gestionBD\EntidadExterna $asociado
     */
    public function removeAsociado(\GestionFaenaBundle\Entity\gestionBD\EntidadExterna $asociado)
    {
        $this->asociados->removeElement($asociado);
    }

    /**
     * Get asociados
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAsociados()
    {
        return $this->asociados;
    }

    /**
     * Set original
     *
     * @param \GestionFaenaBundle\Entity\gestionBD\EntidadExterna $original
     *
     * @return EntidadExterna
     */
    public function setOriginal(\GestionFaenaBundle\Entity\gestionBD\EntidadExterna $original = null)
    {
        $this->original = $original;

        return $this;
    }

    /**
     * Get original
     *
     * @return \GestionFaenaBundle\Entity\gestionBD\EntidadExterna
     */
    public function getOriginal()
    {
        return $this->original;
    }
}
